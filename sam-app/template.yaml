AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  
  Sample SAM Template for sam-app


Parameters:
  Environment:
    Type: String
    Description: A name for the environment example 'dev'
    Default: prod

Globals:
  Function:
    Timeout: 5

Conditions:
  IsProd:
    !Equals [ !Ref Environment, prod ]

Resources:

  IaCPresentationVpc:
    Type: AWS::EC2::VPC
    Condition: IsProd
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  IacPresentationPublicSubnetOne:
    Type: AWS::EC2::Subnet
    Condition: IsProd
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref IaCPresentationVpc

  IacPresentationPrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Condition: IsProd
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref IaCPresentationVpc

  IacPresentationPublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Condition: IsProd
    Properties:
      CidrBlock: 10.0.2.0/24
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref IaCPresentationVpc

  IacPresentationPrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Condition: IsProd
    Properties:
      CidrBlock: 10.0.3.0/24
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      VpcId: !Ref IaCPresentationVpc

  IaCPresentationInternetGateway:
    Condition: IsProd
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IaCPresentationInternetGateway
      VpcId: !Ref IaCPresentationVpc

  IaCPresentationElasticIp:
    Condition: IsProd
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  IaCPresentationNatGateway:
    Condition: IsProd
    Type: AWS::EC2::NatGateway
    Properties:
      ConnectivityType: public
      SubnetId: !Ref IacPresentationPublicSubnetOne
      AllocationId: !GetAtt IaCPresentationElasticIp.AllocationId

  IaCPresentationRouteTablePublic:
    Condition: IsProd
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref IaCPresentationVpc

  IaCPresentationRouteTablePrivate:
    Condition: IsProd
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref IaCPresentationVpc

  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePublic
      SubnetId: !Ref IacPresentationPublicSubnetOne

  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePublic
      SubnetId: !Ref IacPresentationPublicSubnetTwo

  PrivateSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePrivate
      SubnetId: !Ref IacPresentationPrivateSubnetOne

  PrivateSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePrivate
      SubnetId: !Ref IacPresentationPrivateSubnetTwo

  IaCPresentationRoutePublic:
    Condition: IsProd
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IaCPresentationInternetGateway

  IaCPresentationRoutePrivate:
    Condition: IsProd
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref IaCPresentationRouteTablePrivate
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref IaCPresentationNatGateway

  IaCPresentationFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: IaC Presentation Function Security Group
      GroupDescription: IaC Presentation Function Security Group
      VpcId: !Ref IaCPresentationVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 10.0.0.0/16

  IaCPresentationApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Environment

  IaCPresentationDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: "HASH"
        - AttributeName: username
          KeyType: "RANGE"
      TableName: IaCPresentationTable

  IaCPresentationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: hello-world
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            Path: /hello
            Method: GET
            ApiId: !Ref IaCPresentationApi
      VpcConfig: !If
        - IsProd
        - SecurityGroupIds:
            - !Ref IaCPresentationFunctionSecurityGroup
          SubnetIds:
            - !GetAtt IacPresentationPublicSubnetOne.SubnetId
        - SecurityGroupIds:
            - !Ref 'AWS::NoValue'
          SubnetIds:
            - !Ref 'AWS::NoValue'
      Environment:
        Variables:
          PARAM1: VALUE
